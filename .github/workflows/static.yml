# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  schedule:
    - cron: "30 * * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Replace update time in index.html
        run: |
          current_time=$(date +%s)
          date_js="new Date(${current_time}000)"
          sed -i 's|/\*lastUpdated\*/ null|'"$date_js"'|g' index.html

      - uses: actions/github-script@v7
        with:
          script: |
            let preload = "";
            // Generate <link rel="preload"> tags for all images
            const fs = require("fs");
            const path = require("path");
            // Get today's and yesterday's dates in YYYY-MM-DD format
            const today = new Date().toISOString().split("T")[0];
            const yesterday = new Date(Date.now() - 86400000).toISOString().split("T")[0];
            // For each folder in the comics/ directory...
            for (const folder of fs.readdirSync("comics")) {
              // If {today}/comic.webp exists, add a <link rel="preload"> tag for it
              if (fs.existsSync(`comics/${folder}/${today}/comic.webp`)) {
                preload += `<link rel="preload" href="./comics/${folder}/${today}/comic.webp" as="image" type="image/webp">\n`;
                continue;
              }
              // If {yesterday}/comic.webp exists, add a <link rel="preload"> tag for it
              if (fs.existsSync(`comics/${folder}/${yesterday}/comic.webp`)) {
                preload += `<link rel="preload" href="./comics/${folder}/${yesterday}/comic.webp" as="image" type="image/webp">\n`;
              }
            }
            // Write the <link rel="preload"> tags to index.html
            fs.writeFileSync(
              "index.html",
              fs.readFileSync("index.html", "utf-8").replace("<!--Preload-->", preload)
            );
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the directory
          path: "."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
